name: CI - Lint, Test & Security

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  lint-test-security:
    name: Lint, Test, and Scan
    runs-on: ubuntu-latest

    # Environment variables for database and JWT
    env:
      DB_USER: root
      DB_PASS: root
      DB_NAME: book_management
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      JWT_SECRET: my_secret_key

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: book_management
        ports:
          - 3306:3306
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v3

      - name: 🧠 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 💼 Install dependencies
        run: npm install

      - name: 🔧 Wait for MySQL
        run: |
          until mysqladmin ping -h ${{ job.services.mysql.host }} -u$DB_USER -p$DB_PASS --silent; do
            echo "Waiting for MySQL..." && sleep 3;
          done

      - name: 🚀 Run Migrations
        run: npx sequelize-cli db:migrate --env test

      - name: ✨ Run ESLint
        run: npm run lint
        continue-on-error: true

      - name: ❌ Comment on PR if Lint fails
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "🚨 ESLint failed in CI. Please fix linting issues before merging."
            })

      - name: 📊 Run Unit Tests
        run: npm test

      - name: ❌ Comment on PR if Unit Tests fail
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "🚨 Some unit tests failed in CI. Please check the Jest test results."
            })

      - name: 🔍 Run npm audit for vulnerability scan
        run: npm audit --audit-level=high || true

      - name: 🛡️ Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "book-management-api"
          format: "HTML"
          out: "reports"

      - name: 📄 Upload OWASP Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports
