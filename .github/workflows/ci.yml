name: CI - Lint, Test, Security & Ship Logs

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  lint-test-security:
    name: Lint, Test, Scan & Ship Logs
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: book_management
        ports:
          - 3306:3306

    env:
      DB_USER: root
      DB_PASS: root
      DB_NAME: book_management
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      NODE_ENV: test
      JWT_SECRET: my_secret_key

    steps:
      - name: üìÇ Checkout code
        uses: actions/checkout@v3

      - name: üß† Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: üíº Install dependencies
        run: npm install

      - name: üîß Wait for MySQL
        run: |
          echo "Sleeping for MySQL to initialize..."
          sleep 30
          until mysqladmin ping -h $DB_HOST -u$DB_USER -p$DB_PASS --silent; do
            echo "Waiting for MySQL..." && sleep 3;
          done

      - name: üöÄ Run Migrations
        run: npx sequelize-cli db:migrate --env test

      - name: ‚ú® Run ESLint
        continue-on-error: true
        run: npm run lint | tee eslint-log.txt

      - name: üìä Run Unit Tests
        run: npm test | tee test-log.txt

      - name: üîç Run npm audit for vulnerability scan
        run: |
          npm audit --audit-level=high || true
          touch audit-log.txt

      - name: üõ°Ô∏è Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "book-management-api"
          format: "HTML"
          out: "reports"

      - name: üìÑ Upload OWASP Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports

      - name: üöÄ Ship logs to Logstash
        run: |
          echo "Preparing logs..."
          COMMIT_SHA=$(git rev-parse HEAD)
          REPO_NAME="${{ github.repository }}"
          JOB_NAME="${{ github.job }}"
          TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)
  
          ESLINT_LOG=$(base64 eslint-log.txt | tr -d '\n')
          TEST_LOG=$(base64 test-log.txt | tr -d '\n')
          AUDIT_LOG=$(test -f audit-log.txt && base64 audit-log.txt | tr -d '\n' || echo "")
  
          curl -k -X POST https://7aa3-80-233-36-206.ngrok-free.app \
            -H "Content-Type: application/json" \
            -d "{
              \"commit_sha\": \"${COMMIT_SHA}\",
              \"repo\": \"${REPO_NAME}\",
              \"job\": \"${JOB_NAME}\",
              \"timestamp\": \"${TIMESTAMP}\",
              \"eslint_log_b64\": \"${ESLINT_LOG}\",
              \"test_log_b64\": \"${TEST_LOG}\",
              \"audit_log_b64\": \"${AUDIT_LOG}\"
            }"
