name: CI - Lint, Test & Security

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-test-security:
    name: Lint, Test, and Scan
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v3

      - name: 🧰 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 💼 Install dependencies
        run: npm install

      - name: ✨ Run ESLint
        run: npm run lint

      - name: ❌ Comment on PR if Lint fails
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "🚨 ESLint failed in CI. Please fix linting issues before merging."
            })

      - name: 🛠 Install MySQL
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo systemctl start mysql
          sudo systemctl enable mysql
          sudo sed -i 's/bind-address\s*=.*/bind-address = 127.0.0.1/' /etc/mysql/mysql.conf.d/mysqld.cnf
          sudo systemctl restart mysql

      - name: 🛠 Set Up MySQL Database & User
        run: |
          sudo mysql -u root -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root';"
          sudo mysql -u root -proot -e "CREATE DATABASE IF NOT EXISTS book_management;"
          sudo mysql -u root -proot -e "CREATE USER IF NOT EXISTS 'rishi'@'localhost' IDENTIFIED BY 'P@ssw0rd';"
          sudo mysql -u root -proot -e "GRANT ALL PRIVILEGES ON book_management.* TO 'rishi'@'localhost';"
          sudo mysql -u root -proot -e "FLUSH PRIVILEGES;"

      - name: ⏳ Wait for MySQL to be Ready
        run: |
          for i in {1..30}; do
            nc -z 127.0.0.1 3306 && echo "✅ MySQL is ready" && exit 0
            echo "⏳ Waiting for MySQL..."
            sleep 3
          done
          echo "❌ MySQL did not start in time" && exit 1

      - name: 🚀 Run Migrations
        run: |
          echo "⏳ Waiting extra time for MySQL..."
          sleep 10
          npx sequelize-cli db:migrate --env test

      - name: 📊 Run Unit Tests
        run: npm test

      - name: ❌ Comment on PR if Unit Tests fail
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "🚨 Some unit tests failed in CI. Please check the Jest test results."
            })

      - name: 🔍 Run npm audit for vulnerability scan
        run: npm audit --audit-level=high || true

      - name: 🛡️ Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "book-management-api"
          format: "HTML"
          out: "reports"

      - name: 📤 Upload OWASP Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports
