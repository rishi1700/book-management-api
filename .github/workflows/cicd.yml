name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Runs on push to the main branch
  pull_request:
    branches:
      - main  # Runs on pull requests

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: book_management
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h localhost" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4

      - name: üõ† Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: üì¶ Install Dependencies
        run: npm install

      - name: üîç Ensure MySQL User & Grant Permissions
        run: |
          sudo apt-get install -y mysql-client
          mysql -h 127.0.0.1 -u root -proot -e "CREATE USER IF NOT EXISTS 'rishi'@'%' IDENTIFIED BY 'P@ssw0rd';"
          mysql -h 127.0.0.1 -u root -proot -e "GRANT ALL PRIVILEGES ON book_management.* TO 'rishi'@'%';"
          mysql -h 127.0.0.1 -u root -proot -e "FLUSH PRIVILEGES;"

      - name: ‚è≥ Wait for MySQL to be Ready
        run: |
          for i in {1..30}; do
            nc -z localhost 3306 && echo "‚úÖ MySQL is ready" && exit 0
            echo "‚è≥ Waiting for MySQL..."
            sleep 3
          done
          echo "‚ùå MySQL did not start in time" && exit 1

      - name: üîç Check & Create Migrations Directory (If Missing)
        run: |
          if [ ! -d "migrations" ]; then
            mkdir -p migrations
            echo "‚úÖ Created missing migrations directory"
          fi
          ls -l migrations  # Debugging step

      - name: üöÄ Run Migrations
        run: npx sequelize-cli db:migrate --env test

      - name: üõ° Run Tests
        run: npm test

  deploy:
    name: Deploy to AWS EC2
    needs: test  # Only run if tests pass
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4

      - name: üîë Set Up SSH Connection & Deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/book-management-api || git clone https://github.com/rishi1700/book-management-api.git /var/www/book-management-api
            cd /var/www/book-management-api
            git pull origin main
            npm install
            npx sequelize-cli db:migrate
            pm2 restart book-api || pm2 start src/app.js --name book-api
