name: CI/CD Pipeline

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main  

jobs:
  test:
    name: Run Tests Without Docker
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ“¥ Checkout Code
        uses: actions/checkout@v4

      - name: ðŸ›  Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: ðŸ“¦ Install Dependencies
        run: npm install

      - name: ðŸ›  Install MySQL
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo systemctl start mysql
          sudo systemctl enable mysql

      - name: ðŸ›  Set Up MySQL Database & User
        run: |
          sudo mysql -e "CREATE DATABASE IF NOT EXISTS book_management;"
          sudo mysql -e "CREATE USER IF NOT EXISTS 'rishi'@'localhost' IDENTIFIED BY 'P@ssw0rd';"
          sudo mysql -e "GRANT ALL PRIVILEGES ON book_management.* TO 'rishi'@'localhost';"
          sudo mysql -e "FLUSH PRIVILEGES;"

      - name: ðŸš€ Run Migrations
        run: |
          npx sequelize-cli db:migrate --env test

      - name: ðŸ›¡ Run Tests
        run: npm test

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: test  # Deploy only if tests pass

    steps:
      - name: ðŸ“¥ Checkout Code
        uses: actions/checkout@v4

      - name: ðŸš€ Deploy to AWS via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/book-management-api
            git pull origin main
            npm install
            npx sequelize-cli db:migrate --env production
            pm2 restart app || pm2 start src/app.js --name "book-api"
