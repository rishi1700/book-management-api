name: CI/CD Pipeline

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main  

jobs:
  test:
    name: Run Tests Without Docker
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4

      - name: üõ† Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: üì¶ Install Dependencies
        run: npm install

      - name: üõ† Install MySQL
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo systemctl start mysql
          sudo systemctl enable mysql
          sudo sed -i 's/bind-address\s*=.*/bind-address = 127.0.0.1/' /etc/mysql/mysql.conf.d/mysqld.cnf
          sudo systemctl restart mysql

      - name: üõ† Set Up MySQL Database & User
        run: |
          sudo mysql -u root -proot -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root';"
          sudo mysql -u root -proot -e "CREATE DATABASE IF NOT EXISTS book_management;"
          sudo mysql -u root -proot -e "CREATE USER IF NOT EXISTS 'rishi'@'localhost' IDENTIFIED BY 'P@ssw0rd';"
          sudo mysql -u root -proot -e "GRANT ALL PRIVILEGES ON book_management.* TO 'rishi'@'localhost';"
          sudo mysql -u root -proot -e "FLUSH PRIVILEGES;"

      - name: ‚è≥ Wait for MySQL to be Ready
        run: |
          for i in {1..30}; do
            nc -z 127.0.0.1 3306 && echo "‚úÖ MySQL is ready" && exit 0
            echo "‚è≥ Waiting for MySQL..."
            sleep 3
          done
          echo "‚ùå MySQL did not start in time" && exit 1

      - name: üöÄ Run Migrations
        run: |
          echo "‚è≥ Waiting extra time for MySQL..."
          sleep 10
          npx sequelize-cli db:migrate --env test

      - name: üõ° Run Tests
        run: npm test



  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: test  # Deploy only if tests pass

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4

      - name: üöÄ Deploy to AWS via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/book-management-api
            git pull origin main
            npm install
            npx sequelize-cli db:migrate --env production
            pm2 restart app || pm2 start src/app.js --name "book-api"
